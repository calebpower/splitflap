# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: splitflap.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import nanopb_pb2 as nanopb__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='splitflap.proto',
  package='PB',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x0fsplitflap.proto\x12\x02PB\x1a\x0cnanopb.proto\"\xd9\x02\n\x0eSplitflapState\x12\x37\n\x07modules\x18\x01 \x03(\x0b\x32\x1e.PB.SplitflapState.ModuleStateB\x06\x92?\x03\x10\xff\x01\x1a\x8d\x02\n\x0bModuleState\x12\x33\n\x05state\x18\x01 \x01(\x0e\x32$.PB.SplitflapState.ModuleState.State\x12\x12\n\nflap_index\x18\x02 \x01(\r\x12\x0e\n\x06moving\x18\x03 \x01(\x08\x12\x12\n\nhome_state\x18\x04 \x01(\x08\x12\x1d\n\x15\x63ount_unexpected_home\x18\x05 \x01(\r\x12\x19\n\x11\x63ount_missed_home\x18\x06 \x01(\r\"W\n\x05State\x12\n\n\x06NORMAL\x10\x00\x12\x11\n\rLOOK_FOR_HOME\x10\x01\x12\x10\n\x0cSENSOR_ERROR\x10\x02\x12\t\n\x05PANIC\x10\x03\x12\x12\n\x0eSTATE_DISABLED\x10\x04\"\x1a\n\x03Log\x12\x13\n\x03msg\x18\x01 \x01(\tB\x06\x92?\x03p\xff\x01\"\x14\n\x03\x41\x63k\x12\r\n\x05nonce\x18\x01 \x01(\r\"y\n\rFromSplitflap\x12-\n\x0fsplitflap_state\x18\x01 \x01(\x0b\x32\x12.PB.SplitflapStateH\x00\x12\x16\n\x03log\x18\x02 \x01(\x0b\x32\x07.PB.LogH\x00\x12\x16\n\x03\x61\x63k\x18\x03 \x01(\x0b\x32\x07.PB.AckH\x00\x42\t\n\x07payload\"\xe4\x01\n\x10SplitflapCommand\x12;\n\x07modules\x18\x02 \x03(\x0b\x32\".PB.SplitflapCommand.ModuleCommandB\x06\x92?\x03\x10\xff\x01\x1a\x92\x01\n\rModuleCommand\x12\x39\n\x06\x61\x63tion\x18\x01 \x01(\x0e\x32).PB.SplitflapCommand.ModuleCommand.Action\x12\r\n\x05param\x18\x02 \x01(\r\"7\n\x06\x41\x63tion\x12\t\n\x05NO_OP\x10\x00\x12\x0e\n\nGO_TO_FLAP\x10\x01\x12\x12\n\x0eRESET_AND_HOME\x10\x02\"Z\n\x0bToSplitflap\x12\r\n\x05nonce\x18\x01 \x01(\r\x12\x31\n\x11splitflap_command\x18\x02 \x01(\x0b\x32\x14.PB.SplitflapCommandH\x00\x42\t\n\x07payloadb\x06proto3')
  ,
  dependencies=[nanopb__pb2.DESCRIPTOR,])



_SPLITFLAPSTATE_MODULESTATE_STATE = _descriptor.EnumDescriptor(
  name='State',
  full_name='PB.SplitflapState.ModuleState.State',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NORMAL', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LOOK_FOR_HOME', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SENSOR_ERROR', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PANIC', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STATE_DISABLED', index=4, number=4,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=296,
  serialized_end=383,
)
_sym_db.RegisterEnumDescriptor(_SPLITFLAPSTATE_MODULESTATE_STATE)

_SPLITFLAPCOMMAND_MODULECOMMAND_ACTION = _descriptor.EnumDescriptor(
  name='Action',
  full_name='PB.SplitflapCommand.ModuleCommand.Action',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NO_OP', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GO_TO_FLAP', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RESET_AND_HOME', index=2, number=2,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=732,
  serialized_end=787,
)
_sym_db.RegisterEnumDescriptor(_SPLITFLAPCOMMAND_MODULECOMMAND_ACTION)


_SPLITFLAPSTATE_MODULESTATE = _descriptor.Descriptor(
  name='ModuleState',
  full_name='PB.SplitflapState.ModuleState',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='state', full_name='PB.SplitflapState.ModuleState.state', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='flap_index', full_name='PB.SplitflapState.ModuleState.flap_index', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='moving', full_name='PB.SplitflapState.ModuleState.moving', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='home_state', full_name='PB.SplitflapState.ModuleState.home_state', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='count_unexpected_home', full_name='PB.SplitflapState.ModuleState.count_unexpected_home', index=4,
      number=5, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='count_missed_home', full_name='PB.SplitflapState.ModuleState.count_missed_home', index=5,
      number=6, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _SPLITFLAPSTATE_MODULESTATE_STATE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=114,
  serialized_end=383,
)

_SPLITFLAPSTATE = _descriptor.Descriptor(
  name='SplitflapState',
  full_name='PB.SplitflapState',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='modules', full_name='PB.SplitflapState.modules', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222?\003\020\377\001'), file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_SPLITFLAPSTATE_MODULESTATE, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=38,
  serialized_end=383,
)


_LOG = _descriptor.Descriptor(
  name='Log',
  full_name='PB.Log',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='msg', full_name='PB.Log.msg', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222?\003p\377\001'), file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=385,
  serialized_end=411,
)


_ACK = _descriptor.Descriptor(
  name='Ack',
  full_name='PB.Ack',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='nonce', full_name='PB.Ack.nonce', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=413,
  serialized_end=433,
)


_FROMSPLITFLAP = _descriptor.Descriptor(
  name='FromSplitflap',
  full_name='PB.FromSplitflap',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='splitflap_state', full_name='PB.FromSplitflap.splitflap_state', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='log', full_name='PB.FromSplitflap.log', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ack', full_name='PB.FromSplitflap.ack', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='payload', full_name='PB.FromSplitflap.payload',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=435,
  serialized_end=556,
)


_SPLITFLAPCOMMAND_MODULECOMMAND = _descriptor.Descriptor(
  name='ModuleCommand',
  full_name='PB.SplitflapCommand.ModuleCommand',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='action', full_name='PB.SplitflapCommand.ModuleCommand.action', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='param', full_name='PB.SplitflapCommand.ModuleCommand.param', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _SPLITFLAPCOMMAND_MODULECOMMAND_ACTION,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=641,
  serialized_end=787,
)

_SPLITFLAPCOMMAND = _descriptor.Descriptor(
  name='SplitflapCommand',
  full_name='PB.SplitflapCommand',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='modules', full_name='PB.SplitflapCommand.modules', index=0,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222?\003\020\377\001'), file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_SPLITFLAPCOMMAND_MODULECOMMAND, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=559,
  serialized_end=787,
)


_TOSPLITFLAP = _descriptor.Descriptor(
  name='ToSplitflap',
  full_name='PB.ToSplitflap',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='nonce', full_name='PB.ToSplitflap.nonce', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='splitflap_command', full_name='PB.ToSplitflap.splitflap_command', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='payload', full_name='PB.ToSplitflap.payload',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=789,
  serialized_end=879,
)

_SPLITFLAPSTATE_MODULESTATE.fields_by_name['state'].enum_type = _SPLITFLAPSTATE_MODULESTATE_STATE
_SPLITFLAPSTATE_MODULESTATE.containing_type = _SPLITFLAPSTATE
_SPLITFLAPSTATE_MODULESTATE_STATE.containing_type = _SPLITFLAPSTATE_MODULESTATE
_SPLITFLAPSTATE.fields_by_name['modules'].message_type = _SPLITFLAPSTATE_MODULESTATE
_FROMSPLITFLAP.fields_by_name['splitflap_state'].message_type = _SPLITFLAPSTATE
_FROMSPLITFLAP.fields_by_name['log'].message_type = _LOG
_FROMSPLITFLAP.fields_by_name['ack'].message_type = _ACK
_FROMSPLITFLAP.oneofs_by_name['payload'].fields.append(
  _FROMSPLITFLAP.fields_by_name['splitflap_state'])
_FROMSPLITFLAP.fields_by_name['splitflap_state'].containing_oneof = _FROMSPLITFLAP.oneofs_by_name['payload']
_FROMSPLITFLAP.oneofs_by_name['payload'].fields.append(
  _FROMSPLITFLAP.fields_by_name['log'])
_FROMSPLITFLAP.fields_by_name['log'].containing_oneof = _FROMSPLITFLAP.oneofs_by_name['payload']
_FROMSPLITFLAP.oneofs_by_name['payload'].fields.append(
  _FROMSPLITFLAP.fields_by_name['ack'])
_FROMSPLITFLAP.fields_by_name['ack'].containing_oneof = _FROMSPLITFLAP.oneofs_by_name['payload']
_SPLITFLAPCOMMAND_MODULECOMMAND.fields_by_name['action'].enum_type = _SPLITFLAPCOMMAND_MODULECOMMAND_ACTION
_SPLITFLAPCOMMAND_MODULECOMMAND.containing_type = _SPLITFLAPCOMMAND
_SPLITFLAPCOMMAND_MODULECOMMAND_ACTION.containing_type = _SPLITFLAPCOMMAND_MODULECOMMAND
_SPLITFLAPCOMMAND.fields_by_name['modules'].message_type = _SPLITFLAPCOMMAND_MODULECOMMAND
_TOSPLITFLAP.fields_by_name['splitflap_command'].message_type = _SPLITFLAPCOMMAND
_TOSPLITFLAP.oneofs_by_name['payload'].fields.append(
  _TOSPLITFLAP.fields_by_name['splitflap_command'])
_TOSPLITFLAP.fields_by_name['splitflap_command'].containing_oneof = _TOSPLITFLAP.oneofs_by_name['payload']
DESCRIPTOR.message_types_by_name['SplitflapState'] = _SPLITFLAPSTATE
DESCRIPTOR.message_types_by_name['Log'] = _LOG
DESCRIPTOR.message_types_by_name['Ack'] = _ACK
DESCRIPTOR.message_types_by_name['FromSplitflap'] = _FROMSPLITFLAP
DESCRIPTOR.message_types_by_name['SplitflapCommand'] = _SPLITFLAPCOMMAND
DESCRIPTOR.message_types_by_name['ToSplitflap'] = _TOSPLITFLAP
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

SplitflapState = _reflection.GeneratedProtocolMessageType('SplitflapState', (_message.Message,), dict(

  ModuleState = _reflection.GeneratedProtocolMessageType('ModuleState', (_message.Message,), dict(
    DESCRIPTOR = _SPLITFLAPSTATE_MODULESTATE,
    __module__ = 'splitflap_pb2'
    # @@protoc_insertion_point(class_scope:PB.SplitflapState.ModuleState)
    ))
  ,
  DESCRIPTOR = _SPLITFLAPSTATE,
  __module__ = 'splitflap_pb2'
  # @@protoc_insertion_point(class_scope:PB.SplitflapState)
  ))
_sym_db.RegisterMessage(SplitflapState)
_sym_db.RegisterMessage(SplitflapState.ModuleState)

Log = _reflection.GeneratedProtocolMessageType('Log', (_message.Message,), dict(
  DESCRIPTOR = _LOG,
  __module__ = 'splitflap_pb2'
  # @@protoc_insertion_point(class_scope:PB.Log)
  ))
_sym_db.RegisterMessage(Log)

Ack = _reflection.GeneratedProtocolMessageType('Ack', (_message.Message,), dict(
  DESCRIPTOR = _ACK,
  __module__ = 'splitflap_pb2'
  # @@protoc_insertion_point(class_scope:PB.Ack)
  ))
_sym_db.RegisterMessage(Ack)

FromSplitflap = _reflection.GeneratedProtocolMessageType('FromSplitflap', (_message.Message,), dict(
  DESCRIPTOR = _FROMSPLITFLAP,
  __module__ = 'splitflap_pb2'
  # @@protoc_insertion_point(class_scope:PB.FromSplitflap)
  ))
_sym_db.RegisterMessage(FromSplitflap)

SplitflapCommand = _reflection.GeneratedProtocolMessageType('SplitflapCommand', (_message.Message,), dict(

  ModuleCommand = _reflection.GeneratedProtocolMessageType('ModuleCommand', (_message.Message,), dict(
    DESCRIPTOR = _SPLITFLAPCOMMAND_MODULECOMMAND,
    __module__ = 'splitflap_pb2'
    # @@protoc_insertion_point(class_scope:PB.SplitflapCommand.ModuleCommand)
    ))
  ,
  DESCRIPTOR = _SPLITFLAPCOMMAND,
  __module__ = 'splitflap_pb2'
  # @@protoc_insertion_point(class_scope:PB.SplitflapCommand)
  ))
_sym_db.RegisterMessage(SplitflapCommand)
_sym_db.RegisterMessage(SplitflapCommand.ModuleCommand)

ToSplitflap = _reflection.GeneratedProtocolMessageType('ToSplitflap', (_message.Message,), dict(
  DESCRIPTOR = _TOSPLITFLAP,
  __module__ = 'splitflap_pb2'
  # @@protoc_insertion_point(class_scope:PB.ToSplitflap)
  ))
_sym_db.RegisterMessage(ToSplitflap)


_SPLITFLAPSTATE.fields_by_name['modules']._options = None
_LOG.fields_by_name['msg']._options = None
_SPLITFLAPCOMMAND.fields_by_name['modules']._options = None
# @@protoc_insertion_point(module_scope)
